const AWS = require('aws-sdk');
const polly = new AWS.Polly();
const fs = require('fs');

const path = require('path');
const voiceFileLocation = path.join(__dirname, '../', 'MapboxVoice', 'MBVoiceId.swift');

polly.describeVoices({}, (err, data) => {
    if (err) throw (err);

    fs.unlinkSync(voiceFileLocation);
    fs.appendFileSync(voiceFileLocation, `/**\n This is generated code from ./scripts/update-voice.js.\n Do not edit this file directly.\n*/\n\nimport Foundation\n\n@objc(MBVoiceId)\npublic enum VoiceId: UInt, CustomStringConvertible {\n`);

    data.Voices.forEach((v) => fs.appendFileSync(voiceFileLocation, `\t/**\n\t ${v.Gender} voice for \`Locale\` \`${v.LanguageCode}.\`\n\t */\n\tcase ${v.Id.toLowerCase()}\n`));

    fs.appendFileSync(voiceFileLocation, `\npublic init?(description: String) {\n\tlet voice: VoiceId\n\t\tswitch description {\n`);
        data.Voices.forEach((v) => fs.appendFileSync(voiceFileLocation, `\t\t\tcase "${v.Id}":\n\t\tvoice = .${v.Id.toLowerCase()}\n`));
    fs.appendFileSync(voiceFileLocation, `\t\tdefault:\n\t\t\treturn nil\n\t\t}\n\t\tself.init(rawValue: voice.rawValue)\n\t}\n\n`);

    fs.appendFileSync(voiceFileLocation, `\n\tpublic var description: String {\n\t\tswitch self {\n`);
        data.Voices.forEach((v) => fs.appendFileSync(voiceFileLocation, `\t\tcase .${v.Id.toLowerCase()}:\n\t\t\treturn "${v.Id}"\n`));
    fs.appendFileSync(voiceFileLocation, `\t\t}\n\t}\n}`);
});
